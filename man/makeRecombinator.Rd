% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/makeRecombinator.R
\name{makeRecombinator}
\alias{makeRecombinator}
\title{Construct a recombination operator.}
\usage{
makeRecombinator(recombinator, name, description,
  supported = getAvailableRepresentations(), n.parents = 2L,
  multiple.children = TRUE, defaults = list(),
  checker = function(operator.control) TRUE)
}
\arguments{
\item{recombinator}{[\code{function}]\cr
Actual mutation operator.}

\item{name}{[\code{character(1)}]\cr
Name of the recombinator.}

\item{description}{[\code{character(1)}]\cr
Short description of how the recombinator works.}

\item{supported}{[\code{character}]\cr
Vector of strings/names of supported parameter representations. For example
'permutation', 'float', 'binary'.}

\item{n.parents}{[\code{integer(1)}]\cr
Number of parents supported.}

\item{multiple.children}{[\code{logical(1)}]\cr
Does the recombinator return more than one child? Default is \code{TRUE}.}

\item{defaults}{[\code{list}]\cr
List of default strategy parameter values.}

\item{checker}{[\code{function}]\cr
Check object, which performs a sanity check in mutator strategy parameters
passed to the control object.}
}
\value{
[\code{ecr_recombinator}]
  Recombinator object.
}
\description{
Helper function which constructs a recombinator, i. e., a recombination operator.
}
\note{
If a recombinator returns more than one child, the \code{multiple.children}
  parameter needs to be \code{TRUE}, which is the default. In case of multiple
  children produced these have to be placed within a list.
}

